name: test inputs
on: 
  #push:
  workflow_dispatch:
    inputs:
      spring:
        description: Spring
        required: true
        type: boolean
        default: 'false'
      springApp:
        description: SpringApp
        required: true
        type: boolean
        default: 'false'
      app1:
        description: app1
        required: true
        type: boolean
        default: 'false'
      app2:
        description: app2
        required: true
        type: boolean
        default: 'false'
        
  workflow_call:
    # Map the workflow outputs to job outputs
    outputs:
      matrix:
        description: "App_NAME"
        value: ${{ jobs.generateInputPaths.outputs.matrix }}
      check_status:
        description: "The APP VERSION to be deployed"
        value: ${{ jobs.checkInputs.outputs.check }}
#on:
#  push:

env:
  DOCKER_REGISTRY: gcr.io/${{ secrets.GCP_PROJECT }}
  DOCKER_UN: ${{ secrets.DOCKER_UN }}
  DOCKER_PW: ${{ secrets.DOCKER_PWD }}
  
jobs:
  #checkInputs:
  generateInputPaths:
    runs-on: ubuntu-latest
    outputs:
      check: ${{ steps.app_name.outputs.check }}
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v2
    - name: Check Input app names exists
      id: app_name
      run: |
        apps="${{ github.event.inputs.name }}"
        delimiter=,
        a=("spring" "app1" "app2" "app3" "app4" "app5" "app6" "app7" "app8" "app9" "app10")
        b=()
        len=${#a[@]}
        check="ok"
        for (( i=0; i<$len; i++ )); 
          do 
            if [[ ${{ github.event.inputs.spring }} == 'true' || ${{ github.event.inputs.springApp }} == 'true' || ${{ github.event.inputs.app1 }} == 'true' || ${{ github.event.inputs.app2 }} == 'true' ]];
            then
              echo ${array[i]}
              b+=(${array[i]})
            fi           
          done
         echo "${b[*]}"
   # - name: Generate matrix with all modules of WhatTheHack repository
   #   id: set-matrix
   #   if: env.check  == 'ok'
   #   run: |
   #     apps="${{ github.event.inputs.name }}"
   #     echo $apps
   #     echo '::set-output name=matrix::${{format('[{0}]',github.event.inputs.name)}}'
